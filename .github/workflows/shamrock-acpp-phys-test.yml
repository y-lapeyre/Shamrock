name: Acpp/clang

on:
  workflow_call:

jobs:


  shamrock_acpp:
    name: run ${{ matrix.testfile }} wz=${{ matrix.worldsize }} AdaptiveCpp clang-${{ matrix.clang }} ${{ matrix.backend }}:${{matrix.arch}}
    runs-on: [self-hosted,  docker-runner]

    container:
      image: ${{ matrix.container }}

    strategy:
      matrix:
        include:
          - clang: 15
            backend: omp
            arch: none
            worldsize: 1
            testfile: sod_tube_sph.py
            container: ghcr.io/shamrock-code/ci-ubuntu20:main
          - clang: 15
            backend: omp
            arch: none
            worldsize: 1
            testfile: sod_tube_godunov.py
            container: ghcr.io/shamrock-code/ci-ubuntu20:main
          - clang: 15
            backend: omp
            arch: none
            worldsize: 2
            testfile: sod_tube_godunov.py
            container: ghcr.io/shamrock-code/ci-ubuntu20:main
          - clang: 15
            backend: omp
            arch: none
            worldsize: 1
            testfile: sod_tube_zeus.py
            container: ghcr.io/shamrock-code/ci-ubuntu20:main
          - clang: 15
            backend: omp
            arch: none
            worldsize: 2
            testfile: sod_tube_zeus.py
            container: ghcr.io/shamrock-code/ci-ubuntu20:main
          - clang: 15
            backend: omp
            arch: none
            worldsize: 1
            testfile: reload_old_dump.py
            container: ghcr.io/shamrock-code/ci-ubuntu20:main
            - clang: 15
            backend: omp
            arch: none
            worldsize: 1
            testfile: alfven_wave_ispmhd.py
            container: ghcr.io/shamrock-code/ci-ubuntu20:main


    timeout-minutes: 60
    steps:
      #### Checkout part ####
      # Checkout merge commit if PR otherwise default
      - name : Reconfigure git
        run:  |
          git config --global --add safe.directory '*'
          git config --global --list
      - uses: actions/checkout@v4
        if: github.event_name == 'pull_request_target'
        with:
          fetch-depth: 0
          submodules: recursive
          ref: "refs/pull/${{ github.event.number }}/merge"

      - uses: actions/checkout@v4
        if: github.event_name != 'pull_request_target'
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Show diff against main
        if: github.event_name == 'pull_request_target'
        run: git diff ${{ github.event.pull_request.base.sha }} HEAD
      #### End Checkout part ####

      - name: ls local
        run : ls -la

      - name: install LLVM
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${{matrix.clang}}
          sudo apt install -y libclang-${{matrix.clang}}-dev clang-tools-${{matrix.clang}} libomp-${{matrix.clang}}-dev
          if [[ "${{matrix.clang}}" == "16" ]]; then
            sudo rm -r /usr/lib/clang/16*
            sudo ln -s /usr/lib/llvm-16/lib/clang/16 /usr/lib/clang/16
          fi

      - name: install python packages
        run: |
          pip install matplotlib numpy scipy

      - name: Setup env
        run : ./env/new-env --machine debian-generic.acpp --builddir build -- --backend ${{ matrix.backend }} --arch ${{ matrix.arch }}

      - name: Configure
        shell: bash # In docker container github action default to sh
        run: |
          cd build
          source ./activate && shamconfigure

      - name: Build
        shell: bash # In docker container github action default to sh
        run: |
          cd build
          source ./activate && shammake shamrock

      - name: Pull refs
        shell: bash # In docker container github action default to sh
        run: |
          cd build
          source ./activate && pull_reffiles

      - name: run test
        run: |
          cd build
          mpirun -report-bindings --allow-run-as-root --bind-to socket -n ${{matrix.worldsize}} ./shamrock --sycl-cfg 0:0 --loglevel 1 --rscript ../exemples/ci_tests/${{ matrix.testfile }}
